// @generated by protobuf-ts 2.11.1 with parameter generate_dependencies
// @generated from protobuf file "service.proto" (package "service", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PharmaAPI } from "./service";
import type { ProcessingAnalysisRequest } from "./service";
import type { RebuildIndexRequest } from "./service";
import type { ReprocessAllRequest } from "./service";
import type { ProcessRequest } from "./service";
import type { ContactRequest } from "./service";
import type { PriceComparisonRequest } from "./service";
import type { FacetsRequest } from "./service";
import type { SearchGroupsRequest } from "./service";
import type { GenericJsonResponse } from "./service";
import type { SearchRequest } from "./service";
import type { AutocompleteResponse } from "./service";
import type { AutocompleteRequest } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { HealthResponse } from "./service";
import type { HealthRequest } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service service.PharmaAPI
 */
export interface IPharmaAPIClient {
    /**
     * @generated from protobuf rpc: Health
     */
    health(input: HealthRequest, options?: RpcOptions): UnaryCall<HealthRequest, HealthResponse>;
    /**
     * @generated from protobuf rpc: Autocomplete
     */
    autocomplete(input: AutocompleteRequest, options?: RpcOptions): UnaryCall<AutocompleteRequest, AutocompleteResponse>;
    /**
     * @generated from protobuf rpc: Search
     */
    search(input: SearchRequest, options?: RpcOptions): UnaryCall<SearchRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: SearchGroups
     */
    searchGroups(input: SearchGroupsRequest, options?: RpcOptions): UnaryCall<SearchGroupsRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: GetFacets
     */
    getFacets(input: FacetsRequest, options?: RpcOptions): UnaryCall<FacetsRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: PriceComparison
     */
    priceComparison(input: PriceComparisonRequest, options?: RpcOptions): UnaryCall<PriceComparisonRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: Contact
     */
    contact(input: ContactRequest, options?: RpcOptions): UnaryCall<ContactRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: ProcessProducts
     */
    processProducts(input: ProcessRequest, options?: RpcOptions): UnaryCall<ProcessRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: ReprocessAll
     */
    reprocessAll(input: ReprocessAllRequest, options?: RpcOptions): UnaryCall<ReprocessAllRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: RebuildIndex
     */
    rebuildIndex(input: RebuildIndexRequest, options?: RpcOptions): UnaryCall<RebuildIndexRequest, GenericJsonResponse>;
    /**
     * @generated from protobuf rpc: ProcessingAnalysis
     */
    processingAnalysis(input: ProcessingAnalysisRequest, options?: RpcOptions): UnaryCall<ProcessingAnalysisRequest, GenericJsonResponse>;
}
/**
 * @generated from protobuf service service.PharmaAPI
 */
export class PharmaAPIClient implements IPharmaAPIClient, ServiceInfo {
    typeName = PharmaAPI.typeName;
    methods = PharmaAPI.methods;
    options = PharmaAPI.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Health
     */
    health(input: HealthRequest, options?: RpcOptions): UnaryCall<HealthRequest, HealthResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<HealthRequest, HealthResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Autocomplete
     */
    autocomplete(input: AutocompleteRequest, options?: RpcOptions): UnaryCall<AutocompleteRequest, AutocompleteResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AutocompleteRequest, AutocompleteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Search
     */
    search(input: SearchRequest, options?: RpcOptions): UnaryCall<SearchRequest, GenericJsonResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SearchGroups
     */
    searchGroups(input: SearchGroupsRequest, options?: RpcOptions): UnaryCall<SearchGroupsRequest, GenericJsonResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchGroupsRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetFacets
     */
    getFacets(input: FacetsRequest, options?: RpcOptions): UnaryCall<FacetsRequest, GenericJsonResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<FacetsRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PriceComparison
     */
    priceComparison(input: PriceComparisonRequest, options?: RpcOptions): UnaryCall<PriceComparisonRequest, GenericJsonResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<PriceComparisonRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Contact
     */
    contact(input: ContactRequest, options?: RpcOptions): UnaryCall<ContactRequest, GenericJsonResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<ContactRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ProcessProducts
     */
    processProducts(input: ProcessRequest, options?: RpcOptions): UnaryCall<ProcessRequest, GenericJsonResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ProcessRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ReprocessAll
     */
    reprocessAll(input: ReprocessAllRequest, options?: RpcOptions): UnaryCall<ReprocessAllRequest, GenericJsonResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReprocessAllRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RebuildIndex
     */
    rebuildIndex(input: RebuildIndexRequest, options?: RpcOptions): UnaryCall<RebuildIndexRequest, GenericJsonResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<RebuildIndexRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ProcessingAnalysis
     */
    processingAnalysis(input: ProcessingAnalysisRequest, options?: RpcOptions): UnaryCall<ProcessingAnalysisRequest, GenericJsonResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<ProcessingAnalysisRequest, GenericJsonResponse>("unary", this._transport, method, opt, input);
    }
}
